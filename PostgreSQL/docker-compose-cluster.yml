version: '3.8'

services:
  postgres-primary:
    image: postgres:16-alpine
    container_name: postgres_primary
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-devdb}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
      POSTGRES_REPLICATION_USER: ${POSTGRES_REPLICATION_USER:-replicator}
      POSTGRES_REPLICATION_PASSWORD: ${POSTGRES_REPLICATION_PASSWORD:-replicator123}
    ports:
      - "${POSTGRES_PRIMARY_PORT:-5432}:5432"
    volumes:
      - postgres_primary_data:/var/lib/postgresql/data
      - ./cluster-init-scripts:/docker-entrypoint-initdb.d
      - ./postgresql-primary.conf:/etc/postgresql/postgresql.conf
    command: >
      postgres 
      -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - postgres_cluster_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-devdb}"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-replica-1:
    image: postgres:16-alpine
    container_name: postgres_replica_1
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
      POSTGRES_REPLICATION_USER: ${POSTGRES_REPLICATION_USER:-replicator}
      POSTGRES_REPLICATION_PASSWORD: ${POSTGRES_REPLICATION_PASSWORD:-replicator123}
      POSTGRES_PRIMARY_HOST: postgres-primary
      POSTGRES_PRIMARY_PORT: 5432
    ports:
      - "${POSTGRES_REPLICA1_PORT:-5433}:5432"
    volumes:
      - postgres_replica1_data:/var/lib/postgresql/data
      - ./postgresql-replica.conf:/etc/postgresql/postgresql.conf
      - ./setup-replica.sh:/docker-entrypoint-initdb.d/setup-replica.sh
    command: >
      bash -c "
      if [ ! -f /var/lib/postgresql/data/recovery.conf ] && [ ! -f /var/lib/postgresql/data/standby.signal ]; then
        echo 'Setting up replica...'
        rm -rf /var/lib/postgresql/data/*
        PGPASSWORD=$$POSTGRES_REPLICATION_PASSWORD pg_basebackup -h $$POSTGRES_PRIMARY_HOST -D /var/lib/postgresql/data -U $$POSTGRES_REPLICATION_USER -v -P -W
        echo 'standby_mode = \"on\"' >> /var/lib/postgresql/data/postgresql.auto.conf
        echo 'primary_conninfo = \"host=$$POSTGRES_PRIMARY_HOST port=5432 user=$$POSTGRES_REPLICATION_USER\"' >> /var/lib/postgresql/data/postgresql.auto.conf
        touch /var/lib/postgresql/data/standby.signal
      fi
      postgres -c config_file=/etc/postgresql/postgresql.conf
      "
    depends_on:
      postgres-primary:
        condition: service_healthy
    networks:
      - postgres_cluster_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 15s
      timeout: 5s
      retries: 5

  postgres-replica-2:
    image: postgres:16-alpine
    container_name: postgres_replica_2
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
      POSTGRES_REPLICATION_USER: ${POSTGRES_REPLICATION_USER:-replicator}
      POSTGRES_REPLICATION_PASSWORD: ${POSTGRES_REPLICATION_PASSWORD:-replicator123}
      POSTGRES_PRIMARY_HOST: postgres-primary
      POSTGRES_PRIMARY_PORT: 5432
    ports:
      - "${POSTGRES_REPLICA2_PORT:-5434}:5432"
    volumes:
      - postgres_replica2_data:/var/lib/postgresql/data
      - ./postgresql-replica.conf:/etc/postgresql/postgresql.conf
      - ./setup-replica.sh:/docker-entrypoint-initdb.d/setup-replica.sh
    command: >
      bash -c "
      if [ ! -f /var/lib/postgresql/data/recovery.conf ] && [ ! -f /var/lib/postgresql/data/standby.signal ]; then
        echo 'Setting up replica...'
        rm -rf /var/lib/postgresql/data/*
        PGPASSWORD=$$POSTGRES_REPLICATION_PASSWORD pg_basebackup -h $$POSTGRES_PRIMARY_HOST -D /var/lib/postgresql/data -U $$POSTGRES_REPLICATION_USER -v -P -W
        echo 'standby_mode = \"on\"' >> /var/lib/postgresql/data/postgresql.auto.conf
        echo 'primary_conninfo = \"host=$$POSTGRES_PRIMARY_HOST port=5432 user=$$POSTGRES_REPLICATION_USER\"' >> /var/lib/postgresql/data/postgresql.auto.conf
        touch /var/lib/postgresql/data/standby.signal
      fi
      postgres -c config_file=/etc/postgresql/postgresql.conf
      "
    depends_on:
      postgres-primary:
        condition: service_healthy
    networks:
      - postgres_cluster_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 15s
      timeout: 5s
      retries: 5

  haproxy:
    image: haproxy:2.9-alpine
    container_name: postgres_loadbalancer
    restart: unless-stopped
    ports:
      - "${HAPROXY_STATS_PORT:-8404}:8404"
      - "${POSTGRES_LB_WRITE_PORT:-5430}:5430"
      - "${POSTGRES_LB_READ_PORT:-5431}:5431"
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      postgres-primary:
        condition: service_healthy
      postgres-replica-1:
        condition: service_healthy
      postgres-replica-2:
        condition: service_healthy
    networks:
      - postgres_cluster_network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8404"]
      interval: 10s
      timeout: 5s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_cluster
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@localhost.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "${PGADMIN_PORT:-8080}:80"
    volumes:
      - pgadmin_cluster_data:/var/lib/pgadmin
      - ./pgadmin-cluster-servers.json:/pgadmin4/servers.json
    depends_on:
      postgres-primary:
        condition: service_healthy
    networks:
      - postgres_cluster_network

volumes:
  postgres_primary_data:
    driver: local
  postgres_replica1_data:
    driver: local
  postgres_replica2_data:
    driver: local
  pgadmin_cluster_data:
    driver: local

networks:
  postgres_cluster_network:
    driver: bridge
